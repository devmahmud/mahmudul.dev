---
import "odometer/themes/odometer-theme-default.css";

import type { CollectionEntry } from "astro:content";
import formatDate from "@/utils/formatDate";
import Eye from "@/utils/icons/eye.astro";

import { Odometer } from "@/components/odometer";
import { Upvote } from "@/components/upvote";

export const prerender = true;

export interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;

const viewsAPI = await fetch(`${Astro.url.origin}/api/view/${post.slug}`, {
  method: "GET",
});
const { views } = await viewsAPI.json().catch(() => ({ views: 0 }));
const isPlanned = post.data.planned;
---

<a
  class:list={[
    "group flex flex-col gap-2 border-t border-neutral-700 py-4 transition-all",
    !isPlanned && "hover:text-neutral-100",
  ]}
  href={post.data.planned ? null : `/posts/${post.slug}`}
>
  <div class="flex w-full items-center justify-between">
    <h2 transition:name="post-title" class="text-lg">{post.data.title}</h2>

    <div class="flex flex-row items-center gap-4">
      {
        post.data.planned ? (
          <span class="rounded-lg bg-secondary-700 px-2 py-1 text-xs text-neutral-100">
            Planned
          </span>
        ) : (
          <>
            <p>{formatDate(post.data.publishedAt)}</p>
            <svg
              width="18"
              height="18"
              viewBox="0 0 18 18"
              fill="none"
              class="transition-all duration-300 group-hover:translate-x-1"
            >
              <path
                d="M5.25 12.75L12.75 5.25"
                stroke="#999999"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <path
                d="M5.25 5.25H12.75V12.75"
                stroke="#999999"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
          </>
        )
      }
    </div>
  </div>
  <p>{post.data.description}</p>

  <div class="flex flex-row items-center gap-1 text-sm text-gray-500">
    {
      isPlanned ? (
        <Upvote client:only slug={post.slug} />
      ) : (
        <>
          <Eye /> <Odometer client:only quantity={views} /> views
        </>
      )
    }
  </div>
</a>
