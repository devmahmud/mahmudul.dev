---
import formatDate from "@/utils/formatDate";

type Props = {
  title: string;
  publishedAt: Date;
  description: string;
  slug: string;
  planned?: boolean;
};

const { title, publishedAt, description, slug, planned } = Astro.props;
---

<a
  class="group relative block h-full overflow-hidden rounded-2xl backdrop-blur-2xl bg-white/5 border border-white/10 p-8 transition-all duration-300 ease-out hover:bg-white/10 hover:border-white/20 hover:shadow-lg"
  href={planned ? "/planned" : `/posts/${slug}`}
  aria-label={planned ? `Planned post: ${title}` : `Read post: ${title}`}
>

  <div class="absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none">
    <div class="absolute inset-0 rounded-2xl bg-gradient-to-r from-indigo-500/40 via-purple-500/40 to-violet-500/40 p-[1px]">
      <div class="w-full h-full rounded-2xl bg-slate-950/90 backdrop-blur-2xl"></div>
    </div>
  </div>
  
  <div class="relative flex h-full flex-col justify-between">
    <div class="space-y-6">
      <div class="flex items-start justify-between">
        <h3 class="text-lg font-bold text-white line-clamp-2 group-hover:text-indigo-100 transition-colors duration-300">
          {title}
        </h3>
        {
          !planned && (
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              class="mt-1 flex-shrink-0 text-gray-400 transition-colors duration-300 group-hover:text-indigo-400"
              aria-hidden="true"
            >
              <path
                d="M7 17L17 7"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
              />
              <path
                d="M7 7H17V17"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
              />
            </svg>
          )
        }
      </div>
      
      <p class="text-sm text-gray-300 line-clamp-3 group-hover:text-gray-200 transition-colors duration-300">
        {description}
      </p>
    </div>

    <div class="mt-8 flex items-center justify-between">
      {
        planned ? (
          <span class="inline-flex items-center rounded-full bg-orange-500/20 px-4 py-2 text-sm font-medium text-orange-300 border border-orange-500/30 backdrop-blur-sm transition-all duration-300 group-hover:bg-orange-500/30">
            Planned
          </span>
        ) : (
          <span class="text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300">
            {formatDate(publishedAt)}
          </span>
        )
      }
    </div>
  </div>
</a>
