---
import formatDate from "@/utils/formatDate";
import ArrowUpRight from "@/components/icons/arrow-up-right.astro";

type Props = {
  title: string;
  publishedAt: Date;
  description: string;
  slug: string;
  planned?: boolean;
};

const { title, publishedAt, description, slug, planned } = Astro.props;
const href = planned ? "/planned" : `/posts/${slug}`;
const ariaLabel = planned ? `Planned post: ${title}` : `Read post: ${title}`;
---

<a
  class="relative block h-full overflow-hidden rounded-2xl backdrop-blur-2xl backdrop-saturate-150 bg-white/0 border border-white/10 p-8 transition duration-300 ease-out shadow-[0_8px_30px_-12px_rgba(0,0,0,0.55),inset_0_1px_0_rgba(255,255,255,0.06)] hover:shadow-[0_16px_40px_-16px_rgba(0,0,0,0.7),inset_0_1px_0_rgba(255,255,255,0.08)] hover:border-white/40 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-indigo-400/40 focus-visible:ring-offset-2 focus-visible:ring-offset-slate-950"
  href={href}
  aria-label={ariaLabel}
>
  <div class="pointer-events-none absolute inset-0 rounded-2xl shadow-[inset_0_1px_0_rgba(255,255,255,0.05)]"></div>
  
  <div class="relative flex h-full flex-col justify-between">
    <div class="space-y-6">
      <div class="flex items-start justify-between">
        <h3 class="text-lg font-bold text-white line-clamp-2">
          {title}
        </h3>
        { !planned && (<ArrowUpRight class="mt-1 flex-shrink-0 text-gray-400" />) }
      </div>
      
      <p class="text-sm text-gray-300 line-clamp-3">
        {description}
      </p>
    </div>

    <div class="mt-8 flex items-center justify-between">
      {
        planned ? (
          <span class="inline-flex items-center rounded-full bg-orange-500/20 px-4 py-2 text-sm font-medium text-orange-300 border border-orange-500/30 backdrop-blur-sm">
            Planned
          </span>
        ) : (
          <span class="text-sm text-gray-400">
            {formatDate(publishedAt)}
          </span>
        )
      }
    </div>
  </div>
</a>
