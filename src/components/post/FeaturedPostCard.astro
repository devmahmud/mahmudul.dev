---
import formatDate from "@/utils/formatDate";

type Props = {
  title: string;
  publishedAt: Date;
  description: string;
  slug: string;
  planned?: boolean;
};

const { title, publishedAt, description, slug, planned } = Astro.props;
---

<a
  class="group flex h-full w-full cursor-pointer flex-col justify-between rounded-lg border border-neutral-700 bg-neutral-800/30 p-6 transition-all duration-300 hover:-translate-y-1 hover:border-neutral-500 hover:bg-neutral-800/50 hover:shadow-xl hover:shadow-neutral-900/50"
  href={planned ? "/planned" : `/posts/${slug}`}
>
  <div class="flex flex-col gap-4">
    <div class="flex items-start justify-between gap-3">
      <h3 class="text-lg font-semibold text-neutral-100 line-clamp-2 group-hover:text-white">
        {title}
      </h3>
      {
        !planned && (
          <svg
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="none"
            class="mt-1 flex-shrink-0 text-neutral-400 transition-all duration-300 group-hover:translate-x-1 group-hover:text-neutral-300"
          >
            <path
              d="M6 14L14 6"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
            <path
              d="M6 6H14V14"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        )
      }
    </div>
    
    <p class="text-sm text-neutral-400 line-clamp-3 group-hover:text-neutral-300">
      {description}
    </p>
  </div>

  <div class="mt-4 flex items-center justify-between">
    {
      planned ? (
        <span class="inline-flex items-center rounded-full bg-orange-500/20 px-3 py-1 text-xs font-medium text-orange-400">
          Planned
        </span>
      ) : (
        <span class="text-xs text-neutral-500 group-hover:text-neutral-400">
          {formatDate(publishedAt)}
        </span>
      )
    }
  </div>
</a>
