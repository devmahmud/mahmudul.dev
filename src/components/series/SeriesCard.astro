---
import { type CollectionEntry, getCollection } from "astro:content";
import formatDate from "@/utils/formatDate";

export interface Props {
  series: CollectionEntry<"series">;
  order?: number;
}

const { series } = Astro.props;

const posts = (await getCollection("posts"))
  .filter((post) => series.data.id === post?.data?.seriesId)
  .sort((a, b) => (a.data.orderInSeries as number) - (b.data.orderInSeries as number));
---

<a
  class="relative block h-full overflow-hidden rounded-2xl backdrop-blur-2xl backdrop-saturate-150 bg-white/0 border border-white/10 p-6 transition-all duration-300 ease-out transform-gpu shadow-[0_8px_30px_-12px_rgba(0,0,0,0.55),inset_0_1px_0_rgba(255,255,255,0.06)] hover:shadow-[0_16px_40px_-16px_rgba(0,0,0,0.7),inset_0_1px_0_rgba(255,255,255,0.08)] hover:-translate-y-0.5 hover:border-white/40 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-indigo-400/40 focus-visible:ring-offset-2 focus-visible:ring-offset-slate-950"
  href={`/posts/${posts[0].slug}`}
  aria-label={`Read series: ${series.data.title}`}
>
  <div class="pointer-events-none absolute inset-0 rounded-2xl shadow-[inset_0_1px_0_rgba(255,255,255,0.05)]"></div>
  
  <div class="relative flex w-full items-center justify-between">
    <h2 class="text-lg text-white">{series.data.title}</h2>
    
    <div class="flex flex-row items-center gap-4">
      <p class="text-sm text-gray-400">{formatDate(posts[0].data.publishedAt)}</p>
      <svg
        width="18"
        height="18"
        viewBox="0 0 18 18"
        fill="none"
        class="text-gray-400"
        aria-hidden="true"
      >
        <path
          d="M5.25 12.75L12.75 5.25"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M5.25 5.25H12.75V12.75"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
    </div>
  </div>
  <p class="mt-2 text-sm text-gray-300">{series.data.description}</p>
</a>
