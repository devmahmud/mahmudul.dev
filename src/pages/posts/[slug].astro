---
import "odometer/themes/odometer-theme-default.css";

import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

import Layout from "@/layouts/Layout.astro";
import CommentSection from "@/components/post/Utterances.astro";
import { Odometer } from "@/components/odometer";
import formatDate from "@/utils/formatDate";
import { getOgImagePath } from "@/utils/open-graph/image-path";
import Eye from "@/utils/icons/eye.astro";
import TOC from "@/components/post/TOC.astro";

export const prerender = true;

type Post = CollectionEntry<"posts">;

type Props = {
  readingTime: string;
} & Post;

export async function getStaticPaths() {
  const posts = (await getCollection("posts")).filter(
    (post) => !post.data.planned
  );

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const {
  data: { title, publishedAt, description, cover, coverAlt },
  render,
  slug,
} = Astro.props;

const {
  Content,
  remarkPluginFrontmatter: { readingTime },
  headings,
} = await render();

const og = {
  title: title,
  description: description,
  image: new URL(getOgImagePath(Astro.url.pathname), Astro.url.origin).href,
};
---

<Layout title={title} og={og}>
  <div class="gap-10 lg:flex lg:items-start">
    {!!headings.length && <TOC headings={headings} />}
    <main class="post min-w-prose mx-auto flex w-full flex-col gap-4">
      <header role="presentation">
        <h1
          class={"text-lg font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-br from-sky-300 to-sky-800"}
        >
          {title}
        </h1>
        <p class="text-center italic">
          {description} - {formatDate(publishedAt)}
        </p>
        <div class="flex flex-row items-center gap-1 text-sm text-gray-500">
          <p class="text-sm text-gray-500">{readingTime}</p>
          <Eye />
          <Odometer client:only slug={slug} update /> views
        </div>
        <hr class="my-4" />
        <div class="space-x-10 md:flex">
          <div class="w-full">
            <div class="not-prose">
              {
                cover && coverAlt && (
                  <Image
                    class="mb-1 rounded-xl"
                    src={cover}
                    alt={coverAlt}
                    sizes="380"
                  />
                )
              }
            </div>
          </div>
        </div>
      </header>

      <div
        class="post min-w-prose slide-enter-content mx-auto flex w-full flex-col gap-4"
      >
        <Content />
      </div>
    </main>
  </div>
  <CommentSection />
</Layout>
